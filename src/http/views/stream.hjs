<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.min.js" integrity="sha384-IDwe1+LCz02ROU9k972gdyvl+AESN10+x7tBKgc9I5HFtuNz0wWnPclzo6p9vxnk" crossorigin="anonymous"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <title>TeslaBox Streams</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#ffffff">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="theme-color" content="#ffffff">
  </head>
  <body class="container mt-3">
    <a href="/" class="btn btn-secondary btn-sm">Back</a>
    <a href="/stream" class="btn btn-secondary btn-sm"><i class="bi-arrow-repeat"></i></a>

    <table class="table table-striped">
      <thead>
        <tr>
          <th scope="col">
            <span id="front"></span>
            <span id="back"></span>
            <span id="left"></span>
            <span id="right"></span>
          </th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td>
            <video width="100%" controls autoplay muted>
              <source type="video/mp4">
            </video>
          </td>
        </tr>
      </tbody>
    </table>
    <script>
      const media = document.querySelector('video')
      const source = document.querySelector('source')

      const interval = 5000
      const dates = {}
      let lastPlay = []

      media.addEventListener('ended', (event) => {
        if (dates[lastPlay[0]] > lastPlay[1]) {
          play(lastPlay[0], dates[lastPlay[0]])
        }
      })

      function play(angle, date) {
        lastPlay = [angle, date]
        source.src = `/ram/${angle}.mp4?${date}`
        media.load()
      }

      function playlist() {
        fetch('/stream?json')
        .then(res => res.json())
        .then(out => {
          for (const angle of ['front', 'back', 'left', 'right']) {
            if (out.streams && out.streams[angle]) {
              dates[angle] = out.streams[angle]
              if (!lastPlay.length) {
                play(angle, dates[angle])
              }

              const caret = angle === 'front' ? 'up' : angle === 'back' ? 'down' : angle
              const label = angle.charAt(0).toUpperCase() + angle.slice(1)
              document.getElementById(angle).innerHTML = `<a href="#" onclick="play('${angle}', '${dates[angle]}')"><i class="bi-caret-${caret}-fill"></i></a> <a href="#" onclick="play('${angle}', '${dates[angle]}')">${label}</a>`
            }
          }
        })
        .catch(err => console.log(err))
      }

      playlist()
      setInterval(playlist, interval)
    </script>
  </body>
</html>
